



DetNet                                                  J. Korhonen, Ed.
Internet-Draft                                                  Broadcom
Intended status: Informational                                 J. Farkas
Expires: September 5, 2016                                     G. Mirsky
                                                                Ericsson
                                                              P. Thubert
                                                                   Cisco
                                                                Z. Zhuan
                                                                  Huawei
                                                           March 4, 2016


          DetNet Data Plane Protocol and Solution Alternatives
                       draft-dt-detnet-dp-alt-00

Abstract

   This document identifies existing IP and MPLS, and layer-2
   encapsulations that run over IP and/or MPLS data plane technologies
   that could be considered as the base line solution alternatives for
   deterministic networking data plane definition.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on September 5, 2016.

Copyright Notice

   Copyright (c) 2016 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents



Korhonen, et al.        Expires September 5, 2016               [Page 1]

Internet-Draft       DetNet data plane alternatives           March 2016


   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3
   2.  Criteria for data plane solution alternatives . . . . . . . .   4
     2.1.  #1 Encapsulation and overhead . . . . . . . . . . . . . .   4
     2.2.  #2 Stream identification  . . . . . . . . . . . . . . . .   4
     2.3.  #3 Packet sequencing  . . . . . . . . . . . . . . . . . .   4
     2.4.  #4 Explicit routes  . . . . . . . . . . . . . . . . . . .   5
     2.5.  #5 Packet replication and deletion  . . . . . . . . . . .   5
     2.6.  #6 Operations and management  . . . . . . . . . . . . . .   5
     2.7.  #7 Time synchronization . . . . . . . . . . . . . . . . .   5
     2.8.  #8 Class and quality of service capabilities  . . . . . .   6
     2.9.  #9 Packet traceability  . . . . . . . . . . . . . . . . .   6
     2.10. #10 Technical maturity  . . . . . . . . . . . . . . . . .   6
   3.  DetNet adaptation to data plane . . . . . . . . . . . . . . .   7
   4.  Data plane solution alternatives  . . . . . . . . . . . . . .   9
     4.1.  Native IPv6 transport . . . . . . . . . . . . . . . . . .   9
       4.1.1.  Solution description  . . . . . . . . . . . . . . . .   9
       4.1.2.  Analysis and Discussion . . . . . . . . . . . . . . .   9
       4.1.3.  Higher layer header fields  . . . . . . . . . . . . .  13
       4.1.4.  Summary . . . . . . . . . . . . . . . . . . . . . . .  14
     4.2.  Native IPv4 transport . . . . . . . . . . . . . . . . . .  14
       4.2.1.  Solution description  . . . . . . . . . . . . . . . .  14
       4.2.2.  Analysis and Discussion . . . . . . . . . . . . . . .  15
       4.2.3.  Higher layer header fields  . . . . . . . . . . . . .  16
       4.2.4.  Summary . . . . . . . . . . . . . . . . . . . . . . .  17
     4.3.  Generic Routing Encapsulation (GRE) . . . . . . . . . . .  17
       4.3.1.  Solution description  . . . . . . . . . . . . . . . .  17
       4.3.2.  Analysis and Discussion . . . . . . . . . . . . . . .  18
       4.3.3.  Summary . . . . . . . . . . . . . . . . . . . . . . .  19
     4.4.  L2TP  . . . . . . . . . . . . . . . . . . . . . . . . . .  19
       4.4.1.  Solution description  . . . . . . . . . . . . . . . .  19
       4.4.2.  Analysis and Discussion . . . . . . . . . . . . . . .  19
       4.4.3.  Summary . . . . . . . . . . . . . . . . . . . . . . .  19
     4.5.  VXLAN . . . . . . . . . . . . . . . . . . . . . . . . . .  19
       4.5.1.  Solution description  . . . . . . . . . . . . . . . .  19
       4.5.2.  Analysis and Discussion . . . . . . . . . . . . . . .  19
       4.5.3.  Summary . . . . . . . . . . . . . . . . . . . . . . .  20
     4.6.  PseudoWires . . . . . . . . . . . . . . . . . . . . . . .  20
       4.6.1.  Solution description  . . . . . . . . . . . . . . . .  20
       4.6.2.  Analysis and Discussion . . . . . . . . . . . . . . .  21
       4.6.3.  Summary . . . . . . . . . . . . . . . . . . . . . . .  24



Korhonen, et al.        Expires September 5, 2016               [Page 2]

Internet-Draft       DetNet data plane alternatives           March 2016


     4.7.  MPLS  . . . . . . . . . . . . . . . . . . . . . . . . . .  24
       4.7.1.  Solution description  . . . . . . . . . . . . . . . .  24
       4.7.2.  Analysis and Discussion . . . . . . . . . . . . . . .  24
       4.7.3.  Summary . . . . . . . . . . . . . . . . . . . . . . .  24
     4.8.  Bit Indexed Explicit Replication  . . . . . . . . . . . .  24
       4.8.1.  Solution description  . . . . . . . . . . . . . . . .  25
       4.8.2.  Analysis and Discussion . . . . . . . . . . . . . . .  27
       4.8.3.  Summary . . . . . . . . . . . . . . . . . . . . . . .  27
     4.9.  Bit Indexed Explicit Replication - Traffic Engineering  .  27
       4.9.1.  Solution description  . . . . . . . . . . . . . . . .  27
   5.  Summary of data plane alternatives  . . . . . . . . . . . . .  33
   6.  Security considerations . . . . . . . . . . . . . . . . . . .  33
   7.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  33
   8.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  33
   9.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  34
     9.1.  Normative References  . . . . . . . . . . . . . . . . . .  34
     9.2.  Informative References  . . . . . . . . . . . . . . . . .  34
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  41

1.  Introduction

   Deterministic Networking (DetNet) [I-D.finn-detnet-problem-statement]
   provides a capability to carry unicast or multicast data streams for
   real-time applications with extremely low data loss rates and known
   upper bound maximum latency [I-D.finn-detnet-architecture].  The
   deterministic networking Quality of Service (QoS) is expressed as 1)
   the maximum end-to-end latency from sender (talker) to receiver
   (listener), 2) probability of loss of a packet.  Only the worst-case
   values for the mentioned parameters are concerned.

   There are three techniques to achieve the QoS required by
   deterministic networks:

   o  zero congestion loss,
   o  explicit routes,
   o  packet replications and deletion.

   This document identifies existing IP and Multiprotocol Label
   Switching Architecture (MPLS) [RFC3031], and layer-2 encapsulations
   that run over IP and/or MPLS data plane technologies that could be
   considered as the base line solution alternatives for deterministic
   networking data plane definition.  The full scope of the
   deterministic networking data plane solution is considered including,
   as appropriate, quality of service (QoS), operations and management
   (O&M), and time synchronization.






Korhonen, et al.        Expires September 5, 2016               [Page 3]

Internet-Draft       DetNet data plane alternatives           March 2016


2.  Criteria for data plane solution alternatives

   Each deterministic networking data plane solution alternative is
   described and evaluated using the criteria described in this section.
   The used criteria enumerated in this section are selected so that
   they highlight the existence or lack of features that are expected or
   seen important to a solution alternative for the data plane solution.

2.1.  #1 Encapsulation and overhead

   In several cases a deterministic flow/strem has to be encapsulated
   inside other protocols, for example, when transporting a layer-2
   Ethernet frame over an IP transport network.  In some cases a former
   tunneling like encapsulation can be avoided by underlying transport
   protocol translation, for example, translating layer-2 Ethernet frame
   including addressing and stream identification into native IP
   traffic.  Last it is possible that talkers and listeners handle
   deterministic flows natively in layer-3.  This criteria concerns what
   is the encapsulation method the solution alternative support:
   tunneling like encapsulation, protocol translation or native layer-3
   transport.  In addition to the encapsulation mechanism this criteria
   is also concerned of the processing and specifically the encapsulate
   header overhead.

2.2.  #2 Stream identification

   The solution alternative has to provide means to identify specific
   deterministic flows / streams.  The stream identification can, for
   example, be explicit field in the data plane encapsulation header or
   implicitly encoded into the addressing scheme of the used data plane
   protocol.  This criteria concerns the availability and details of
   deterministic flow / stream identification the data plane protocol
   alternative has.

2.3.  #3 Packet sequencing

   The solution alternative has to provide means for end systems to
   number packets sequentially and transport that sequencing information
   along with the sent packets.  In addition to possible reordering
   packets one of the important uses for sequencing is detecting
   duplicates.  In a case of intentional packet duplication a
   combination of stream identification and packet sequencing allows for
   detecting and discarding duplicates at the receiver (see Section 2.5
   for more details).  This criteria concerns the availability and
   details of the packet sequencing capabilities the data plane protocol
   alternative has.





Korhonen, et al.        Expires September 5, 2016               [Page 4]

Internet-Draft       DetNet data plane alternatives           March 2016


2.4.  #4 Explicit routes

   The solution alternative has to provide a mechanism(s) for
   establishing explicit routes that all packets belonging to a
   deterministic flow / stream will follow.  The explicit route can be
   seen as a form of source routing or a pre-reserved path e.g., using
   some network management procedure.  It should be noted that the
   explicit route does not need to be detailed to a level where every
   possible intermediate node along the path is part of the named
   explicit route.  The IEEE 802.1Qca [IEEE8021Qca] specification
   defines how to do explicit path control in a bridged network and its
   IETF counter part is defined in [I-D.ietf-isis-pcr].  This criteria
   concerns the available mechanisms for explicit routes for the data
   plane protocol alternative.

2.5.  #5 Packet replication and deletion

   End systems and/or relay systems can number packets sequentially,
   replicate them, and later eliminate all but one of the replicas, at
   multiple points in the network in order to ensure that one (or more)
   equipment failure events still leave at least one path intact for a
   deterministic networking stream.  The goal is to enable seamless
   "protection switching" in a way that no packet gets lost or there is
   no ramp up time when either one of the paths fails for one reason or
   another.

   The IEEE 802.1CB [IEEE8021CB] is an example of Ethernet-based
   solution that defines packet sequence numbering, packet replication,
   and duplicate packet identification and deletion.  The deterministic
   networking data plane solution alternative at layer-3 has to provide
   equivalent functionality.  This criteria concerns the available
   mechanisms for packet replication and duplicate deletion the data
   plane protocol alternative has.

2.6.  #6 Operations and management

   The solution alternative should demonstrate an availability of
   appropriate standardized O&M tools or control/management plane that
   can be extended for deterministic networking purposes with a
   reasonable effort, when required.  The O&M tools do not necessarily
   need to be specific to the data plane protocol as it could be the
   case, for example, with MPLS-based data planes.

2.7.  #7 Time synchronization

   The solution alternative may benefit from having a sense of time or
   at least that the associated O&M protocols had time synchronization
   properties.  One concrete example is Realtime Transport Protocol



Korhonen, et al.        Expires September 5, 2016               [Page 5]

Internet-Draft       DetNet data plane alternatives           March 2016


   (RTP) [RFC3550], which carries timestamps in the protocol header in
   addition to sequence numbers, has a well specified algorithms, for
   example, for jitter calculations, and also has an associated control
   channel, the Realtime Transport Control Protocol (RTCP).  Another
   example could be residence time measurement support for MPLS network
   domain using Generic Associated Channel (G-ACh) extensions.  This
   criteria concerns the available mechanisms for time synchronization
   in the context of the data plane protocol alternative.

2.8.  #8 Class and quality of service capabilities

   The data plane solution alternative should provide means for class of
   service (CoS) based traffic classification, for example, for queuing
   discipline.  Existing CoS traffic classification enablers include but
   are not limited to IP header differentiated services code point
   (DSCP) field [RFC2474], MPLS label traffic class field [RFC5462], and
   IEEE 803.1p priority code point (PCP) field to name few.

   Quality of Service (QoS) is a mechanism for flow/stream specific
   traffic treatment and include a quarantee/agreement for the service.
   In the context of the data plane solution alternative there should be
   means for flow/stream identification, which then can be used to map a
   flow/stream against specific resources and treatment in a node
   enforcing the QoS.

   This Criteria concerns the availability and mechanisms for the CoS
   and QoS marking and signaling as a part of the data plane protocol
   solution alternative.

2.9.  #9 Packet traceability

   For the network management and specifically for tracing down
   implementation or network configuration errors any means to find out
   whether a packet is a replica, which node performed replication, and
   which path was intended for the replica, can be very useful.  This
   criteria concerns the availability of solutions for tracing packets
   in the context of data plane protocol alternative.

2.10.  #10 Technical maturity

   The technical maturity of the data plane solution alternative is
   crucial, since it basically defines the effort, time line and risks
   involved for the use of the solution in deployments.  For example,
   the maturity level can be categorised as available immediately,
   available with small extensions, available with repurposing/
   redefining portions of the protocol or its header fields.  Yet
   another important measure for maturity is the deployment experience.




Korhonen, et al.        Expires September 5, 2016               [Page 6]

Internet-Draft       DetNet data plane alternatives           March 2016


   This criteria concerns the maturity of the data plane protocol
   alternative as the solution alternative.

3.  DetNet adaptation to data plane

   This document logically divides the data plane to two layers for the
   adaptation of DetNet services:

   o  The Det layer is a shim layer to carry DetNet flow specific
      attributes, which are needed during forwarding.  Edge nodes of a
      network domain are the peers at the Det layer.
   o  The Net layer is below the Det layer.  The Net layer provides the
      networking between the end-points of a DetNet flow.  Core nodes of
      a network domain are involved in the Net layer.

   Distinguishing these two data plane layers helps to explore and
   evaluate various combinations of the data plane solutions available.

   A number of data plane technology candidates are discussed later in
   this document.  They can be mapped to the two layers as shown in
   Figure 1.

                         .
                         .
                         .
                     +-------+
                     |  Det  | PW, RTP, UDP, GRE, L2TP
                     ~~~~~~~~~
                     |  Net  | IPv6, IPv4, MPLS
                     +-------+
                         .
                         .

                 Figure 1: DetNet adaptation to data plane

   Both the Det and the Net layers are provided by a single technology
   in some solutions, e.g. the Det layer is PW and the Net layer is MPLS
   in case of PW over MPLS.  Nonetheless, both the Det and the Net
   layers can include multiple technology layers in other solutions in
   order to provide the capabilities needed for DetNet flows.  For
   instance, the Net layer can comprise MPLS-in-GRE (Section 4.6) in one
   solution.  In another solution, the Det layer can include, e.g., RTP
   in UDP (Section 4.1.3).

   There are many valid options to create a data plane solution for
   DetNet traffic by selecting a technology approach for the Det layer
   and also selecting a technology approach for the Net layer.  There
   are a high number of valid combinations.  Therefore, not the



Korhonen, et al.        Expires September 5, 2016               [Page 7]

Internet-Draft       DetNet data plane alternatives           March 2016


   combinations but the different technologies are evaluated along the
   criteria collected in Section 2.  Different criteria apply for the
   Det layer and the Net layer, however, some of the criteria are valid
   for both layers.

   The criteria for the Det layer:

      #1 Encapsulation and overhead
      #2 Stream identification (Flow ID part of the DetNet stream)
      #3 Packet sequencing (sequence number)
      #6 Operations and management (capabilities)
      #7 Time synchronization (e.g., time stamping)
      #8 Class and quality of service capabilities (Det specific)
      #10 Technical maturity

   The criteria for the Net layer:

      #1 Encapsulation and overhead
      #2 Stream identification (Egress ID)
      #4 Explicit routes (network path)
      #5 Packet replication and deletion (for seamless redundancy)
      #6 Operations and management (capabilities)
      #7 Time synchronization (time/phase sync of nodes)
      #8 Class and quality of service capabilities (Net specific)
      #9 Packet traceability (verification purposes)
      #10 Technical maturity

   Some of the criteria are relevant for both the Det and Net layers.
   The two layers provide together what is needed to meet certain
   criteria, e.g., stream identification.  Different aspects are valid
   for the two different layers for other criteria, e.g., time
   synchronization.  Furthermore, technical maturity is a criteria valid
   for both layers.

   The Stream ID is compound of a Flow ID and an Egress ID in order to
   provide a unique ID for a DetNet flow.  The Egress ID belongs to the
   Net layer as it is required for routing the flow.  On top of that,
   the Flow ID provides the identification in the Det layer.  Taking PW
   over MPLS as an example, the LSP label of the egress node is the
   Egress ID, and the PW label is the Flow ID on top.

   Class and quality of service capabilities are typically provided by
   the technologies available at the Net layer, as well as the ones
   available at the Det layer.  However, both the Det and Net layers
   have their own specific aspects.  For instance, the TC field of the
   PW label belongs to the Det layer whereas the TC field of the LSP
   labels belongs to the Net layer.  Mapping between the QoS parameters




Korhonen, et al.        Expires September 5, 2016               [Page 8]

Internet-Draft       DetNet data plane alternatives           March 2016


   of the two different layers is possible depending on the network
   scenario.

   Different aspects of time synchronization are provided by the two
   different layers.  The Det layer provides timing information for the
   applications using DetNet flows, e.g., via time stamps.  The Net
   layer provides time and/or phase synchronization among network nodes,
   e.g., using IEEE 1588 or one of its Profiles.

4.  Data plane solution alternatives

   The following sections describe and rate deterministic data plane
   solution alternatives.  In "Analysis and Discussion" section each
   alternative is evaluated against the criteria given in Section 2 and
   rated using the following: (M)eets the criteria, (W)ork needed, and
   (N)ot suitable or too much work envisioned.

4.1.  Native IPv6 transport

4.1.1.  Solution description

   This section investigates the application of native IPv6 [RFC2460] as
   the data plane for deterministic networking along the criteria
   collected in Section 2.

   The application of higher OSI layer headers, i.e., headers deeper in
   the packet, can be considered.  Two aspects have to be taken into
   account for such solutions. (i) Those header fields can be encrypted.
   (ii) Those header fields are deeper in the packet, therefore, routers
   have to apply deep packet inspection.  See further details in
   Section 4.1.3.

4.1.2.  Analysis and Discussion

   Encapsulation and overhead (W)

      Deterministic flows are assumed to be handled natively at layer-3
      by IPv6 at the first place.  The fixed header of an IPv6 packet is
      40 bytes [RFC2460].  This overhead is bigger if any Extension
      Header is used, and a generic behaviour for host and forwarding
      nodes is specified in [RFC7045].  However, the exact overhead
      (Section 2.1) depends on what solution is actually used to provide
      DetNet features, e.g., explicit routing or seamless redundancy if
      any of these is applied.

      IPv6 has two types of Extension Headers that are processed by
      intermediate routers between the source and the final destination
      and may be of interest for the data plane signaling, the Routing



Korhonen, et al.        Expires September 5, 2016               [Page 9]

Internet-Draft       DetNet data plane alternatives           March 2016


      Header that is used to direct the traffic via intermediate routers
      in a strict or loose source routing way, and the Hop-by-Hop
      Options Header that carries optional information that must be
      examined by every node along a packet's delivery path.  The Hop-
      by-Hop Options Header, when present, must immediately follow the
      IPv6 Header and it is not possible to limit its processing to the
      end points of Source Routed segments.

      IPv6 also provides a Destination Options Header that is used to
      carry optional information to be examined only by a packet's
      destination node(s).  The encoding of the options used in the Hop-
      by-Hop and in the Destination Options Header indicates the
      expected behavior when a processing IPv6 node does not recognize
      the Option Type, e.g. skip or drop; it should be noted that due to
      performance restrictions nodes may ignore the Hop-by-Hop Option
      Header, drop packets containing a Hop-by-Hop Option Header, or
      assign packets containing a Hop-by-Hop Option Header to a slow
      processing path [I-D.ietf-6man-rfc2460bis] (e.g. punt packets from
      hardware to software forwarding which is highly detrimental to the
      performance).

      The creation of new Extension Headers that would need to be
      processed by intermediate nodes is strongly discouraged.  In
      particular, new Extension Header(s) having hop-by-hop behavior
      must not be created or specified.  New options for the existing
      Hop-by-Hop Header should not be created or specified unless no
      alternative solution is feasible [RFC6564].


   Stream identification (M/W)

      The 20-bit flow label field of the fixed IPv6 header is suitable
      to distinguish different deterministic flows/streams.  But
      guidance on the use of the flow label provided by [RFC6437] places
      restrictions on how the flow label can be used.  In particular,
      labels should be chosen from an approximation to a discrete
      uniform distribution.  Additionally, existing implementations
      generally do not open APIs to control the flow label from the
      upper layers.

      Alternatively, the Stream identification could be transported in a
      new option in the Hop-by-Hop Options Header.

   Packet sequencing (W/N)

      Packet sequencing would require a new option in an IPv6 Extension
      Header.  One approach could be to encapsulate the packets in IP-
      in-IP tunnels that would terminate at the elimination points.  In



Korhonen, et al.        Expires September 5, 2016              [Page 10]

Internet-Draft       DetNet data plane alternatives           March 2016


      that case, the sequence number is only useful to the destination
      of the outer IPv6 header, and it could be placed in a new option
      in the Destination Options Header in the encapsulation.

      Alternatively, the sequence number could also be transported in
      another new option in the Hop-by-Hop Options Header.

   Explicit routes (W)

      The general assumption is that a Software-Defined Networking (SDN)
      [RFC7426] based approach is applied to compute, establish and
      manage the explicit routes, leveraging Traffic Engineering (TE)
      extensions to routing protocols [RFC5305]
      [I-D.ietf-idr-ls-distribution] and evolutions to the Path
      Computation Element (PCE) Architecture [RFC5440], though a number
      of issues remain to be solved [RFC7399].

      Segment Routing (SR) [I-D.ietf-spring-segment-routing] is a new
      initiative to equip IPv6 with explicit routing capabilities.  The
      idea for the DetNet data plane would be to apply SR to IPv6 with
      the addition of a new type of routing extension header
      [I-D.ietf-6man-segment-routing-header] to explicitly signal the
      path in the data plane between the source and the destination,
      and/or between replication points and elimination points if this
      functionality is used.

      Another concern regarding packet replication is how to enforce
      replicated packets to take different route while the final
      destination still remains the same.  With strict source routing,
      all the intermediate hops are listed and paths can be guaranteed
      to be non-overlapping.  Loose source routing only signals some of
      the intermediate hops and it takes additional knowledge to ensure
      that there is no single point of failure.


   Packet replication and deletion (W)

      The implementation of this functionality largely depends on used
      the packet sequencing and flow/stream identification approaches.
      The above discussion on the potential use of new Options for
      packet sequencing and flow/stream identification approaches, as
      well as source routing and IP tunnels to signal explicit paths,
      also applies here.

      The functionality of replicating a packet exists in IPv6 but is
      limited to multicast flows.  On the other hand, there is currently
      no specification for the duplicate packet deletion functionality
      at the elimination points.  The behaviour of keeping a state about



Korhonen, et al.        Expires September 5, 2016              [Page 11]

Internet-Draft       DetNet data plane alternatives           March 2016


      received packets exists in Neighbor Discovery during the address
      resolution process, but it is limited to final delivery and prone
      to DOS attacks.

      As discussed above, IP-in-IP encapsulation and Segment Routing
      could be leveraged to signal a segment in a packet.  A replication
      point would insert a different routing header in each copy it
      makes, the routing header providing explicitly the hops to the
      elimination point for that particular replica of the packet, in a
      strict or in a loose source routing fashion.  An elimination point
      would pop the routing headers from the various copies it gets and
      forward or receive the packet if it is the final destination.


   Operations and management (M/W)

      IPv6 enjoys the existing toolbox for generic IP network
      management.  However, IPv6 specific management features are still
      not at the level of that IPv4 has.  This specifically concerns the
      areas that are IPv6 specific, for example, related to neighbor
      discovery protocol (ND), stateless address autoconfiguration
      (SLAAC), subscriber identification, and security.  While the
      standards are already mostly in place the implementations in
      deployed equipment can be lacking or inadequate for commercial
      deployments.  This is largely only an issue with old existing
      equipment.

   Time synchronization (W/N)

      IPv6 has no existing supporting mechanisms for anything time
      synchronization.  A new extension header would be needed for this
      purpose, if such functionality is required.

   Class and quality of service capabilities (M)

      The traffic class field of the fixed IPv6 header is designed for
      this purpose.

   Packet traceability (M/W/N)

      The traceability of replicated packets involves the capability to
      resolve which replication point issued a particular copy of a
      packet, which segment was intended for that replica, and which
      particular packet of which particular stream this is. sequence
      also depends on the sequencing mechanism.  The replication point
      may be indicated as the source of the packet if IP-in-IP
      encapsulation is used to forward along segments.  An alternate to
      IP-in-IP tunneling along segments would be to protect the original



Korhonen, et al.        Expires September 5, 2016              [Page 12]

Internet-Draft       DetNet data plane alternatives           March 2016


      source address in a destination option similar to the Home Address
      option [RFC6275] and then use the address of the replication point
      as source in the IP header.

      The traceability also involves the capability to determine if a
      particular segment is operational.  While IPv6 as such has no
      support for reversing a path this, it appears source route
      extensions such as the one defined for segment routing could be
      used for tracing purposes.  Though it is not a usual practice,
      IPv6 [RFC2460] expects that a Source Route path may be reversed,
      and the standard insists that a node must not include the reverse
      of a Routing Header in the response unless the received Routing
      Header was authenticated.

   Technical maturity (M/W)

      IPv6 has been around about 20 years.  However, large scale global
      and commercial IPv6 deployments are rather new dating only few
      years back to around 2012.  While IPv6 has proven itself there are
      number of small issues to work on as they show up once operations
      experience grows.

      The Cisco 6Lab site [sixlab] provides information on IPv6
      deployment per country, indicating figures for prefixes, transit
      AS, content and users.  Per this site, many countries, including
      Canada, Brazil, the USA, Germany, France, Japan, Portugal, Sweden,
      Finland, Norway, Greece, and Ecuador, achieve a deployment ratio
      above 30 percent, and the overall adoption reported by Google
      Statistics [googleipv6] is now above 10 percent.


4.1.3.  Higher layer header fields

   Fields of headers belonging to higher OSI layers, e.g., transport
   layer, can be used to implement functionality that is not provided by
   the IPv6 header fields.  However, this approach cannot be always
   applied, e.g., due to encryption.  Furthermore, even if this approach
   is applicable, it requires deep packet inspection from the routers
   and switches.  There are implementation dependent limits how far into
   the packet the lookup can be done efficiently in the fast path.  In
   general a safe bet is between 128 and 256 octets for the maximum
   lookup depth.  Various higher layer protocols can be applied.  Some
   examples are provided here for the sequence numbering feature
   (Section 2.3).







Korhonen, et al.        Expires September 5, 2016              [Page 13]

Internet-Draft       DetNet data plane alternatives           March 2016


4.1.3.1.  TCP

   The TCP header includes a sequence number parameter, which can be
   applied to detect and eliminate duplicate packets if seamless
   redundancy is used.  As the TCP header is right after the IP header,
   it does not require very deep packet inspection; the 4-byte sequence
   number is conveyed by bits 32 through 63 of the TCP header.  In
   addition to sequencing, the TCP header also contain source and
   destination port information that can be used for assisting the flow/
   stream identification.

4.1.3.2.  RTP

   RTP is often used to deliver time critical traffic in IP networks.
   RTP is is carried on top of IP and UDP [RFC3550].  The RTP header
   includes a 2-byte sequence number, which can be used to detect and
   eliminate duplicate packets if seamless redundancy is used.  The
   sequence number is conveyed by bits 16 through 31 of the RTP header.
   In addition to the sequence number the RTP header has also timestamp
   field (bits 32 through 63) that can be useful for time
   synchronization purposes.  Furthermore, the RTP header has also one
   or more synchronization sources (bits starting from 64) that can
   potentially be useful for flow/stream identification purposes.  also
   co

4.1.4.  Summary

   TBD.

4.2.  Native IPv4 transport

4.2.1.  Solution description

   IPv4 [RFC0791] is in principle the same as IPv6, except that it has a
   smaller address space.  However, IPv6 was designed around the fact
   that extension headers are an integral part of the protocol and
   operation from the beginning, although the practise may some times
   prove differently [I-D.ietf-v6ops-ipv6-ehs-in-real-world].  IPv4
   never really needed any extension headers to work properly, thus
   support for IPv4 options outside closed networks cannot typically be
   guaranteed.  In the context of deterministic networking data plane
   solutions the major difference between IPv4 and IPv6 seems to be the
   practical support for header extensibility.  Anything below and above
   the IP header independent of the verion is practically the same.







Korhonen, et al.        Expires September 5, 2016              [Page 14]

Internet-Draft       DetNet data plane alternatives           March 2016


4.2.2.  Analysis and Discussion

   Encapsulation and overhead (M)

      The fixed header of an IPv4 packet is 20 bytes [RFC0791].  IP
      options add overhead and the maximum IPv4 header size if 60 octets
      leaving only 40 octets for possible options.

   Stream identification (W/N)

      The IPv4 header has a 16-bit identification field that was
      originally intended for assisting fragmentation and reassembly of
      IPv4 packets as described in [RFC0791].  The identification field
      has also been proposed to be used for actually identifying flows/
      streams between two IP addresses and a given protocol for
      detecting and removing duplicate packets [RFC1122].  However,
      recent update [RFC6864] to both [RFC0791] and [RFC1122] restricts
      the use of IPv4 identification field only to fragmentation
      purposes.  Duplicate packet detection for IPv4 is studied in
      [RFC6621] to a great detail in the context of simplified multicast
      forwarding.

      The IPv4 also has a stream identifier option [RFC0791], which
      contains a 16-bit SATNET stream identifier.  However, the option
      has been deprecated [RFC6814].  The conclusion is that stream
      identification does not work nicely with IPv4 header alone and a
      traditional 5-tuple identification might not also be enough in a
      case of a flow/stream duplication.  For a working solution upper
      layer protocol headers such as the RTP are required for
      unambiguous flow/stream identification.

   Packet sequencing (W/N)

      IPv4 has no inbuilt support for packet sequencing.  Upper layer
      protocol header support such as the RTP is required.

   Explicit routes (M/W)

      IPv4 has two source routing option specified: the loose source and
      record route option (LSRR), and the strict source and record route
      option (SSRR) [RFC0791].  The support of these options in the
      Internet is questionable but within a closed network the support
      may be assumed.

   Packet replication and deletion (W/N)






Korhonen, et al.        Expires September 5, 2016              [Page 15]

Internet-Draft       DetNet data plane alternatives           March 2016


      Currently there is no native mechamism for IPv4 to support packet
      replication and deletion.  In general the issue regarding the IPv6
      packet replication and deletion also applies to IPv4.

   Operations and management (M)

      IPv4 enjoys the extensive and "complete" existing toolbox for
      generic IP network management.

   Time synchronization (W/N)

      IPv4 has an existing option for transporting "Internet Timestamp"
      [RFC0791] with the accuracy of 1ms.  The support and usability of
      this option is unknown in the context of determnistic networking
      data plane.  Similarly to IPv6 new work would be needed to
      introduce sense of time to IPv4 or rely on upper layer protocol
      such as the RTP to provide the required functionality.

   Class and quality of service capabilities (M)

      The type of service (TOS) field of the fixed IPv4 header is
      designed for this purpose.

   Packet traceability (W/N)

      The IPv4 has a traceroute option [RFC1393] that could be used to
      record the route the packet took.  However, the option has been
      deprecated [RFC6814].  Similarly to IPv6 new work would be needed
      to allow better traceability of IPv4 packets.

   Technical maturity (M/W)

      IPv4 can be considered mature technology with over 30 years of
      implementation, deployment and operations experience.  However, no
      new IPv4 standards development is "allowed" anymore
      [RFC6540][I-D.ietf-sunset4-gapanalysis].


4.2.3.  Higher layer header fields

   Fields of headers belonging to higher OSI layers, e.g., transport
   layer, can be used to implement functionality that is not provided by
   the IPv4 header fields.  See the discussion in Section 4.1.3, which
   is directly applicable for IPv4 as well.







Korhonen, et al.        Expires September 5, 2016              [Page 16]

Internet-Draft       DetNet data plane alternatives           March 2016


4.2.4.  Summary

4.3.  Generic Routing Encapsulation (GRE)

4.3.1.  Solution description

   Generic Routing Encapsulation (GRE) [RFC2784] provides an
   encapsulation of an arbitrary network layer protocol over another
   arbitrary network layer protocol.  The encapsulation of a GRE packet
   can be found in Figure 2.

                     +-------------------------------+
                     |                               |
                     |        Delivery Header        |
                     |                               |
                     +-------------------------------+
                     |                               |
                     |          GRE Header           |
                     |                               |
                     +-------------------------------+
                     |                               |
                     |         Payload packet        |
                     |                               |
                     +-------------------------------+

                  Figure 2: Encapsulation of a GRE packet

   Based on RFC2784, [RFC2890] further includes sequencing number and
   Key in optional fields of the GRE header, which may help to transport
   Detnet traffic flows over IP networks.  The format of a GRE header is
   presented in Figure 3.

    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |C| |K|S|  Reserved0      | Ver |          Protocol Type          |
    +-----------------------------------------------------------------+
    |      Checksum (optional)      |        Reserved1 (Optional)     |
    +-----------------------------------------------------------------+
    |                        Key (optional)                           |
    +-----------------------------------------------------------------+
    |                  Sequence Number (optional)                     |
    +-----------------------------------------------------------------+

                     Figure 3: Format of a GRE header







Korhonen, et al.        Expires September 5, 2016              [Page 17]

Internet-Draft       DetNet data plane alternatives           March 2016


4.3.2.  Analysis and Discussion

   Encapsulation and overhead (M)

      GRE provides encapsulation for a network layer protocol over
      anther network layer protocol.  A new protocol type for Detnet
      traffics should be allocated as an "Ether Type" in [RFC1700] and
      in [ETYPES].  The fixed header of a GRE packet is 4 octets while
      the maximum header is 16 octets with optional fields in Figure 3.

   Stream identification (W)

      There is no stream identification field in GRE header.  However,
      it can rely on the flow identification mechanism applied in the
      delivery protocols, such as stream identification stated in IP
      section 3.2.1 and 3.2.2 when the delivery protocol are IPv6 and
      IPv4 respectively.  Alternatively, the Key field can also be
      extended to carry the stream identification.  The size of Key
      field is 4 octets.

   Packet sequencing (M)

      As stated in section 3.x.1, GRE provides an optional sequencing
      number in its header to provide sequencing services for packets.
      The size of the sequencing number is 32 bits.

   Explicit routes (W/N)

      GRE has no packet replication and deletion currently in its header
      and should be extended or rely on delivery protocols.

   Packet replication and deletion (N)

      GRE has no packet replication and deletion currently in its header
      and should be extended or rely on delivery protocols.

   Operations and management (W/N)

      [note: rely on the delivery protocol] GRE has no packet
      replication and deletion currently and should be relied on
      delivery protocols.

   Time synchronization (W/N)

      [note: rely on the delivery protocol] GRE has no packet
      replication and deletion currently and should be relied on
      delivery protocols.




Korhonen, et al.        Expires September 5, 2016              [Page 18]

Internet-Draft       DetNet data plane alternatives           March 2016


   Class and quality of service capabilities (W/N)

      [note: rely on the delivery protocol] GRE has no packet
      replication and deletion currently and should be relied on
      delivery protocols.  For the class of service capability, an
      optional code point field to indicate CoS of a traffic can be
      extended in GRE header.

   Packet traceability (W/N)

      [note: rely on the delivery protocol] GRE has no packet
      replication and deletion currently and should be relied on
      delivery protocols.

   Technical maturity (M)

      GRE has been developed over 20 years.  The delivery protocol
      mostly used is IPv4, while the IPv6 support for GRE is to be
      standardized now in IETF as [I-D.ietf-intarea-gre-ipv6].  Due to
      its good extensibility, GRE is also extended to support network
      virtualization in Data Center, which is NVGRE [RFC7637].


4.3.3.  Summary

4.4.  L2TP

   [Editor's note: L2TPv3 [RFC3931] content to be provided later, if
   needed]

4.4.1.  Solution description

4.4.2.  Analysis and Discussion

4.4.3.  Summary

4.5.  VXLAN

   [Editor's note: VXLAN [RFC7348] content to be provided later, if
   needed]

4.5.1.  Solution description

4.5.2.  Analysis and Discussion







Korhonen, et al.        Expires September 5, 2016              [Page 19]

Internet-Draft       DetNet data plane alternatives           March 2016


4.5.3.  Summary

4.6.  PseudoWires

4.6.1.  Solution description

   PSeudo Wire Emulation Edge-to-Edge (PWE3) [RFC3985] or simply
   PseudoWires (PW) provide means of emulating the essential attributes
   and behaviour of a telecommunications service over a packet switched
   network (PSN) using IP or MPLS transport.  In addition to traditional
   telecommunications services such as T1 line or Frame Relay, PWs also
   provide transport for Ethernet service [RFC4448] and for generic
   packet service [RFC6658].  Figure 4 illustrate the reference PWE3
   stack model.

    +----------------+                      +----------------+
    |Emulated Service|                      |Emulated Service|
    |(e.g., Eth, ...)|<= Emulated Service =>|(e.g., Eth, ...)|
    +----------------+                      +----------------+
    |    Payload     |                      |    Payload     | CW,
    |  Encapsulation |<=== Pseudo Wire ====>|  Encapsulation | Timing,
    |                |                      |                | Seq., ..
    +----------------+                      +----------------+
    |PW Demultiplexer|                      |PW Demultiplexer|
    |   PSN Tunnel,  |<==== PSN Tunnel ====>|  PSN Tunnel,   | MPLS.
    | PSN & Physical |                      | PSN & Physical | L2TP,
    |     Layers     |                      |    Layers      | IP, ..
    +-------+--------+     ___________      +---------+------+
            |             /           \               |
            +============/     PSN     \==============+
                         \             /
                          \___________/


               Figure 4: PWE3 protocol stack reference model

   PWs appear as a good data plane solution alternative for a number of
   reasons.  PWs are a proven and deployed technology with a rich O&M
   control plane [RFC4447], and enjoy the toolbox developed for MPLS
   networks.  Furthermore, PWs may have an optional Control Word (CW) as
   part of the payload encapsulation between the PSN and the emulated
   service that is, for example, capable of frame sequencing and
   duplicate detection.  The encapsulation layer may also provide timing
   [RFC5087].

   PWs can be also used if the PSN is IP, which enables the application
   of PWs in networks that do not have MPLS enabled in their core
   routers.  One approach to provide PWs over IP is to provide MPLS over



Korhonen, et al.        Expires September 5, 2016              [Page 20]

Internet-Draft       DetNet data plane alternatives           March 2016


   IP in some way and then leverage what is available for PWs over MPLS.
   The following standard solutions are available both for IPv4 and IPv6
   to follow this approach.  The different solutions have different
   overhead as discussed in the following subsection.  The MPLS-in-IP
   encapsulation is specified by [RFC4023].  The IPv4 Protocol Number
   field or the IPv6 Next Header field is set to 137, which indicates an
   MPLS unicast packet.  (The use of the MPLS-in-IP encapsulation for
   MPLS multicast packets is not supported.)  The MPLS-in-GRE
   encapsulation is specified in [RFC4023], where the IP header (either
   IPv4 or IPv6) is followed by a GRE header, which is followed by an
   MPLS label stack.  The protocol type field in the GRE header is set
   to MPLS Unicast (0x8847) or Multicast (0x8848).  MPLS over L2TPv3
   over IP encapsulation is specified by [RFC4817].  The MPLS-in-UDP
   encapsulation is specified by [RFC7510], where the UDP Destination
   Port indicates tunneled MPLS packet and the UDP Source Port is an
   entropy value that is generated by the encapsulator to uniquely
   identify a flow.  MPLS-in-UDP encapsulation can be applied to enable
   UDP-based ECMP (Equal-Cost Multipath) or Link Aggregation.  All these
   solutions can be secured with IPSec.

4.6.2.  Analysis and Discussion

   Encapsulation and overhead (M)

      PWs offer encapsulation services practically for any types of
      payloads over any PSN.  New PW types need a code point allocation
      [RFC4446] and in some cases an emulated service specific document.

      Specifically in the case of the MPLS PSN the PW encapsulation
      overhead is minimal.  Typically minimum two labels and a CW is
      needed, which totals to 12 octets.  PW type specific handling
      might, however, allow optimizations on the emulated service in the
      provider edge (PE) device's native service processing (NSP) /
      forwarder function.  These optimizations could be used, for
      example, to reduce header overhead.  Ethernet PWs already have
      rather low overhead [RFC4448].  Without a CW and VLAN tags the
      Ethernet header gets reduced to 14 octets (minimum Ethernet header
      overhead is 26).

      The overhead is somewhat bigger in case of IP PSN if an MPLS over
      IP solution is applied to provide PWs.  IP adds at least 20 (IPv4)
      or 40 (IPv6) bytes overhead to the PW over MPLS overhead;
      furthermore, the GRE, L2TPv3, or UDP header has to be taken into
      account if any of these further encapsulations is used.

   Stream identification (M)





Korhonen, et al.        Expires September 5, 2016              [Page 21]

Internet-Draft       DetNet data plane alternatives           March 2016


      PWs provide multiple layers of stream identification, especially
      in the case of the MPLS PSN.  The PWs are typically prepended with
      a PW label that can be used to identify a specific PW.
      Furthermore, the PSN also uses one or more labels to transport
      packets over a specific label switched paths (that then would
      carry PWs).  IP (and other) PSNs would need other mechanisms, such
      as, UDP port numbers, upper layer protocol header (like TRP) or
      some IP extension header to provide required stream
      identification.

   Packet sequencing (M)

      As mentioned earlier PWs may contain an optional CW that is able
      to provide sequencing services.  The size of the sequence number
      in the generic CW is 16 bits, which might be, depending on the
      used link speed be too little.

   Explicit routes (M)

      In a case of the MPLS PSN the traffic engineering toolbox
      developed for MPLS can be used to signal explicit label switched
      paths (LSP) [RFC5921] [RFC2702][RFC3209].  Furthermore, the PSN
      may also use segment routing (SR) to provide explicit routes
      [I-D.ietf-spring-segment-routing].  Segmement routing based
      solution would also be available for IPv6 PSN
      [I-D.ietf-6man-segment-routing-header].

   Packet replication and deletion (W)

      The 1+1 PW/LSP protection / redundancy mechanisms [RFC6718] could
      provide tools for packet replication.  However, these solutions
      are not really intended for sourcing multiple simultaneous packet
      streams.  The solutions have one active and other standby stream.
      The PW duplicate detection mechanism also exists in theory
      [RFC3985] but no emulated service makes use of it currently.  For
      IP PSN refer to the discussion in Section 4.1.2 and Section 4.2.2.

   Operations and management (M/W)

      PWs have rich control plane for O& and in a case of the MPLS PSN
      enjoy the full control plane toolbox developed for MPLS network
      O&M likewise IP PSN have the full toolbox of IP network O&M tools.
      There could be, however, need for deterministic networking
      specific extensions for the mentioned control planes.

   Time synchronization (M)





Korhonen, et al.        Expires September 5, 2016              [Page 22]

Internet-Draft       DetNet data plane alternatives           March 2016


      It is possible to carry time synchronization information as part
      of the PW encapsulation layer (see for example [RFC5087]).
      Whether the timing precision is enough for all deterministic
      networking use cases vary, and it is possible existing mechanisms
      are not adequate for all use cases.  IP PSNs have already
      demonstarted the use of time synchronization as a part of PWE3
      [RFC5086].

   Class and quality of service capabilities (M)

      In a case of IP PSN the 6-bit differentiated services code point
      (DSCP) field can be used for indicating the class of service
      [RFC2474] and 2-bit field reserved for the explicit congestion
      notification (ECN) [RFC3168].  Similarly, in a case of MPLS PSN,
      there are 3-bit traffic class field (TC) [RFC5462] in the label
      reserved for for both Explicitly TC-encoded-PSC LSPs (E-LSP)
      [RFC3270] and ECN [RFC5129].  Due to the limited number of bits in
      the TC field, their use for QoS and ECN functions restricted and
      intended to be flexible.  Although the Qos/CoS mechanism is
      already in place some clarifications may be required in the
      context of deterministic networking flows/streams, for example, if
      some specific mapping between bit fields have to be done.

   Packet traceability (M/W)

      In a case of MPLS PSN and an approach where PWs are prepended with
      a PSN layer outer label (or more labels in a stack) help tracing
      the explicit reverse path of the packet using the outer label(s)
      as the key.  Even if the PW labels of the duplicated packets were
      the same the outer labels should be different.  However, even this
      approach is not "perfect" since the intermediate node identities
      are not recorded into the packet hop-by-hop basis as some protocol
      do (for example, Diameter protocol loop detection [RFC6733]).

   Technical maturity (M)

      PWs, IP and MPLS are proven technologies with wide variety of
      deployments and years of operational experience.  Furthermore, the
      estimated work for missing functionality (packet replication and
      deletion) does not appear to be extensive, since the existing
      protection mechanism already get close to what is needed from the
      deterministic networking data plane solution.









Korhonen, et al.        Expires September 5, 2016              [Page 23]

Internet-Draft       DetNet data plane alternatives           March 2016


4.6.3.  Summary

   PseudoWires appear to be a strong candidate as the deterministic
   networking data plane solution alternative.  The strong points are
   the technical maturity and the extensive control plane for O&M.  This
   holds specifically for MPLS-based PSN.

   Extensions are required to realize the packet replication and
   duplicate detection.  feature of the deterministic networking data
   plane.

4.7.  MPLS

4.7.1.  Solution description

   This section concentrates on MPLS [RFC3031][RFC3032] i.e., to a data
   plane solutions where a payload traffic is transported directly over
   MPLS.  Basically, MPLS is capable of transporting any traffic
   payload, not just IP.  However, in non-IP transport payload cases the
   solution quickly starts to resemble PseudoWires (see Section 4.6) or
   other MPLS-based solutions with appropriate shim/adaptation layer
   between the MPLS label and the transported payload (see Sections 4.8
   and 4.9).

4.7.2.  Analysis and Discussion

4.7.3.  Summary

4.8.  Bit Indexed Explicit Replication

   Bit-Indexed Explicit Replication (BIER) layer may be considered to be
   included into Deterministic Networking data plane solution.
   Encapsulation of a BIER packet in MPLS network presented in Figure 5


















Korhonen, et al.        Expires September 5, 2016              [Page 24]

Internet-Draft       DetNet data plane alternatives           March 2016


      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                   Label Stack Element                         |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                   Label Stack Element                         |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |              BIER-MPLS label          |     |1|               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0 1 0 1|  Ver  |  Len  |              Entropy                  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                BitString  (first 32 bits)                     ~
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     ~                                                               ~
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     ~                BitString  (last 32 bits)                      |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |OAM|     Reserved      | Proto |            BFIR-id            |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                Figure 5: BIER packet in MPLS encapsulation

4.8.1.  Solution description

   The DetNet may be presented in BIER as distinctive payload type with
   its own Proto(col) ID.  Then it is likely that DetNet will have the
   header that would identify:

   o  Version;
   o  Sequence Number;
   o  Timestamp;
   o  Payload type, e.g. data vs. OAM.

   DetNet node, collocated with BFIR, may use multiple BIER sub-domains
   to create replicated flows.  Downstream DetNet nodes, collocated with
   BFER, would terminate redundant flows based on Sequence Number and/or
   Timestamp information.  Such DetNet may be BFER in one BIER sub-
   domain and BFIR in another.  Thus DetNet flow would traverse several
   BIER sub-domains.












Korhonen, et al.        Expires September 5, 2016              [Page 25]

Internet-Draft       DetNet data plane alternatives           March 2016


                                  +-----+
                                  |  A  |
                                  +-----+
                                   /   \
                                  .     .
                                 /       .
                                .         \
                               /           .
                              .             .
                             /               \
                        +-----+             +-----+
                        |  B  |             |  C  |
                        +-----+             +-----+
                         /   \               /   \
                        .     .             .     .
                       /       \           .       .
                      .         .         /         \
                     /           \       .           .
                    .             .     .             .
                   /               \   /               \
               +-----+            +-----+           +-----+
               |  D  |            |  E  |           |  F  |
               +-----+            +-----+           +-----+
                  \                .  .               /
                   .              .    .             .
                    \            .      .           .
                     .          .        .         /
                      \        .          .       .
                        .     .            .     .
                         \   .              .   /
                        +-----+            +-----+
                        |  G  |            |  H  |
                        +-----+            +-----+

                      Figure 6: DetNet in BIER domain

   Consider DetNet flow that must traverse BIER enabled domain from A to
   G and H.  DetNet may use three BIER subdomains:

   o  A-B-D-E-G (dash-dot): A is BFIR, E and G are BFERs,
   o  A-C-E-F-H (dash-double-dot): A is BFIR, E and H are BFERs,
   o  E-G-H (dotted): E is BFIR, G and H are BFERs.

   DetNet node A sends DetNet into red and purple BIER sub-domains.
   DettNet node E receives DetNet packet and sends into green sub-domain
   while terminating duplicates and those that deemed too-late.





Korhonen, et al.        Expires September 5, 2016              [Page 26]

Internet-Draft       DetNet data plane alternatives           March 2016


   DetNet nodes G and H receive DetNet flows, terminate duplicates and
   those that are too-late.

4.8.2.  Analysis and Discussion

4.8.3.  Summary

4.9.  Bit Indexed Explicit Replication - Traffic Engineering

   An alternate use of Bit-Indexed Explicit Replication (BIER) uses bits
   in the BitString to represent adjacencies as opposed to destinations,
   as discussed in BIER Traffic Engineering (TE)
   [I-D.eckert-bier-te-arch].

   The proposed function of BIER-TE in the DetNet data plane is to
   control the process of replication and elimination, as opposed to the
   identification of the flows or and the sequencing of packets within a
   flow.

   At the path ingress, BIER-TE identifies the adjacencies that are
   activated for this packet (under the rule of the controller).  At the
   egress, BIER-TE is used to identify the adjacencies where
   transmission failed.  This information is passed to the controller,
   which in turn can modify the active adjacencies for the next packets.

   The value is that the replication can be controlled and monitored
   with the granularity of a packet and a adjacency in a control loops
   that involves an external controller.

4.9.1.  Solution description

   BIER-TE enables to activate the replication and elimination functions
   in a manner that is abstract to the data plane forwarding
   information.  An adjacency, which is represented by a bit in the BIER
   header, can correspond in the data plane to an Ethernet hop, a Label
   Switched Path, or it can correspond to an IPv6 loose or strict source
   routed path.

   In a nutshell, BIER-TE is used as follows:

   o  A controller computes a complex path, sometimes called a track,
      which takes the general form of a ladder.  The steps and the side
      rails between them are the adjacencies that can be activated on
      demand on a per-packet basis using bits in the BIER header.







Korhonen, et al.        Expires September 5, 2016              [Page 27]

Internet-Draft       DetNet data plane alternatives           March 2016


                            ===> (A) ====> (C) ====
                          //     ^ |       ^ |     \\
              ingress (I)        | |       | |       (E) egress
                          \\     | v       | v     //
                            ===> (B) ====> (D) ====


      Figure 7: Ladder Shape with Replication and Elimination Points

   o  The controller assigns a BIER domain, and inside that domain,
      assigns bits to the adjacencies.  The controller assigns each bit
      to a replication node that sends towards the adjacency, for
      instance the ingress router into a segment that will insert a
      routing header in the packet.  A single bit may be used for a step
      in the ladder, indicating the other end of the step in both
      directions.


                            ===> (A) ====> (C) ====
                          // 1   ^ |  4    ^ |   7 \\
              ingress (I)        |2|       |6|       (E) egress
                          \\ 3   | v  5    | v   8 //
                            ===> (B) ====> (D) ====


                         Figure 8: Assigning Bits

   o  The controller activates the replication by deciding the setting
      of the bits associated with the adjacencies.  This decision can be
      modified at any time, but takes the latency of a controller round
      trip to effectively take place.  Below is an example that uses
      Replication and Elimination to protect the A->C adjacency.



















Korhonen, et al.        Expires September 5, 2016              [Page 28]

Internet-Draft       DetNet data plane alternatives           March 2016


            +-------+-----------+-------+---------------------+
            | Bit # | Adjacency | Owner | Example Bit Setting |
            +-------+-----------+-------+---------------------+
            |   1   |    I->A   |   I   |          1          |
            |   2   |    A->B   |   A   |          1          |
            |       |    B->A   |   B   |                     |
            |   3   |    I->C   |   I   |          0          |
            |   4   |    A->C   |   A   |          1          |
            |   5   |    B->D   |   B   |          1          |
            |   6   |    C->D   |   C   |          1          |
            |       |    D->C   |   D   |                     |
            |   7   |    C->E   |   C   |          1          |
            |   8   |    D->E   |   D   |          0          |
            +-------+-----------+-------+---------------------+

                Replication and Elimination Protecting A->C

                     Table 1: Controlling Replication

   o  The BIER header with the controlling BitString is injected in the
      packet by the ingress node of the deterministic path.  That node
      may act as a replication point, in which case it may issue
      multiple copies of the packet


                          ====>  Repl ===> Elim ====
                       //         |         ^        \\
               ingress            |         |           egress
                                  v         |
                                 Fwd ====> Fwd


                       Figure 9: Enabled Adjacencies

   o  For each of its bits that is set in the BIER header, the owner
      replication point resets the bit and transmits towards the
      associated adjacency; to achieve this, the replication point
      copies the packet and inserts the relevant data plane information,
      such as a source route header, towards the adjacency that
      corresponds to the bit











Korhonen, et al.        Expires September 5, 2016              [Page 29]

Internet-Draft       DetNet data plane alternatives           March 2016


                      +-----------+----------------+
                      | Adjacency | BIER BitString |
                      +-----------+----------------+
                      |    I->A   |    01011110    |
                      |    A->B   |    00011110    |
                      |    B->D   |    00010110    |
                      |    D->C   |    00010010    |
                      |    A->C   |    01001110    |
                      +-----------+----------------+

               BitString in BIER Header as Packet Progresses

                        Table 2: BIER-TE in Action

   o  Adversely, an elimination node on the way strips the data plane
      information and performs a bitwise AND on the BitStrings from the
      various copies of the packet that it has received, before it
      forwards the packet with the resulting BitString.

                      +-----------+----------------+
                      | Operation | BIER BitString |
                      +-----------+----------------+
                      |    D->C   |    00010010    |
                      |    A->C   |    01001110    |
                      |           |    --------    |
                      |  AND in C |    00000010    |
                      |           |                |
                      |    C->E   |    00000000    |
                      +-----------+----------------+

                BitString Processing at Elimination Point C

                    Table 3: BIER-TE in Action (cont.)

   o  In this example, all the transmissions succeeded and the BitString
      at arrival has all the bits reset - note that the egress may be an
      Elimination Point in which case this is evaluated after this node
      has performed its AND operation on the received BitStrings).













Korhonen, et al.        Expires September 5, 2016              [Page 30]

Internet-Draft       DetNet data plane alternatives           March 2016


               +-------------------+-----------------------+
               | Failing Adjacency | Egress BIER BitString |
               +-------------------+-----------------------+
               |        I->A       |       Frame Lost      |
               |        I->B       |       Not Tried       |
               |        A->C       |        00010000       |
               |        A->B       |        01001100       |
               |        B->D       |        01001100       |
               |        D->C       |        01001100       |
               |        C->E       |       Frame Lost      |
               |        D->E       |       Not Tried       |
               +-------------------+-----------------------+

                       BitString indicating failures

                    Table 4: BIER-TE in Action (cont.)

   o  But if a transmission failed along the way, one (or more) bit is
      never cleared.  Table 4 provides the possible outcomes of a
      transmission.  If the frame is lost, then it is probably due to a
      failure in either I->A or C->E, and the controller should enable
      I->B and D->E to find out.  A BitString of 00010000 indicates
      unequivocally a transmission error on the A->C adjacency, and a
      BitString of 01001100 indicates a loss in either A->B, B->D or
      D->C; enabling D->E on the next packets may provide more
      information to sort things out.

   In more details:

   The BIER header is of variable size, and a DetNet network of a
   limited size can use a model with 64 bits if 64 adjacencies are
   enough, whereas a larger deployment may be able to signal up to 256
   adjacencies for use in very complex paths.


















Korhonen, et al.        Expires September 5, 2016              [Page 31]

Internet-Draft       DetNet data plane alternatives           March 2016


       0                   1                   2                   3
       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |0 1 0 1|  Ver  |  Len  |              Entropy                  |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |                BitString  (first 32 bits)                     ~
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      ~                                                               ~
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      ~                BitString  (last 32 bits)                      |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |OAM|     Reserved      | Proto |            BFIR-id            |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


                         Figure 10: BIER-TE Header

   For the DetNet data plane, a replication point is an ingress point
   for more than one adjacency, and an elimination point is an egress
   point for more than one adjacency.

   A pre-populated state in a replication node indicates which bits are
   served by this node and to which adjacency each of these bits
   corresponds.  With DetNet, the state is typically installed by a
   controller entity such as a PCE.  The way the adjacency is signaled
   in the packet is fully abstracted in the bit representation and must
   be provisioned to the replication nodes and maintained as a local
   state, together with the timing or shaping information for the
   associated flow.

   The DetNet data plane uses BIER-TE to control which adjacencies are
   used for a given packet.  This is signaled from the path ingress,
   which sets the appropriate bits in the BIER BitString to indicate
   which replications must happen.

   The replication point clears the bit associated to the adjacency
   where the replica is placed, and the elimination points perform a
   logical AND of the BitStrings of the copies that it gets before
   forwarding.

   As is apparent in the examples above, clearing the bits enables to
   trace a packet to the replication points that made any particular
   copy.  BIER-TE also enables to detect the failing adjacencies or
   sequences of adjacencies along a path and to activate additional
   replications to counter balance the failures.

   Finally, using the same BIER-TE bit for both directions of the steps
   of the ladder enables to avoid replication in both directions along



Korhonen, et al.        Expires September 5, 2016              [Page 32]

Internet-Draft       DetNet data plane alternatives           March 2016


   the crossing adjacencies.  At the time of sending along the step of
   the ladder, the bit may have been already reset by performing the AND
   operation with the copy from the other side, in which case the
   transmission is not needed and does not occur (since the control bit
   is now off).

5.  Summary of data plane alternatives

   TBD.  A condensed summary of all solution alternative.

                        +-------------+----------+
                        | Alternative | Comments |
                        +-------------+----------+
                        | Native IPv4 | ..       |
                        | Native IPv6 | ..       |
                        | GRE         | ..       |
                        | L2TP        | ..       |
                        | IP/MPLS     | ..       |
                        | PWE         | ..       |
                        | BIER        | ..       |
                        +-------------+----------+

                   Table 5: PseudoWire criteria summary

6.  Security considerations

   TBD.  Analysis per solution alternative.

7.  IANA Considerations

   This document has no IANA considerations.

8.  Acknowledgements

   The author(s) ACK and NACK.

   The following people were part of the DetNet Data Plane Design Team:

      Jouni Korhonen
      Janos Farkas
      Norman Finn
      Olivier Marce
      Gregory Mirsky
      Pascal Thubert
      Zhuangyan Zhuang






Korhonen, et al.        Expires September 5, 2016              [Page 33]

Internet-Draft       DetNet data plane alternatives           March 2016


9.  References

9.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <http://www.rfc-editor.org/info/rfc2119>.

9.2.  Informative References

   [ETYPES]   IANA, "Ethernet Numbers", March 2015, <http://ftp.isi.edu/
              in-notes/iana/assignments/ethernet-numbers >.

   [googleipv6]
              Google, "Google IPv6 stats",
              <https://www.google.com/intl/en/ipv6/statistics.html>.

   [I-D.eckert-bier-te-arch]
              Eckert, T. and G. Cauchie, "Traffic Enginering for Bit
              Index Explicit Replication BIER-TE", draft-eckert-bier-te-
              arch-02 (work in progress), October 2015.

   [I-D.finn-detnet-architecture]
              Finn, N., Thubert, P., and M. Teener, "Deterministic
              Networking Architecture", draft-finn-detnet-
              architecture-02 (work in progress), November 2015.

   [I-D.finn-detnet-problem-statement]
              Finn, N. and P. Thubert, "Deterministic Networking Problem
              Statement", draft-finn-detnet-problem-statement-04 (work
              in progress), October 2015.

   [I-D.ietf-6man-rfc2460bis]
              Deering, S. and B. Hinden, "Internet Protocol, Version 6
              (IPv6) Specification", draft-ietf-6man-rfc2460bis-03 (work
              in progress), January 2016.

   [I-D.ietf-6man-segment-routing-header]
              Previdi, S., Filsfils, C., Field, B., Leung, I., Linkova,
              J., Kosugi, T., Vyncke, E., and D. Lebrun, "IPv6 Segment
              Routing Header (SRH)", draft-ietf-6man-segment-routing-
              header-00 (work in progress), December 2015.








Korhonen, et al.        Expires September 5, 2016              [Page 34]

Internet-Draft       DetNet data plane alternatives           March 2016


   [I-D.ietf-idr-ls-distribution]
              Gredler, H., Medved, J., Previdi, S., Farrel, A., and S.
              Ray, "North-Bound Distribution of Link-State and TE
              Information using BGP", draft-ietf-idr-ls-distribution-13
              (work in progress), October 2015.

   [I-D.ietf-intarea-gre-ipv6]
              Pignataro, C., Bonica, R., and S. Krishnan, "IPv6 Support
              for Generic Routing Encapsulation (GRE)", draft-ietf-
              intarea-gre-ipv6-14 (work in progress), September 2015.

   [I-D.ietf-isis-pcr]
              Farkas, J., Bragg, N., Unbehagen, P., Parsons, G.,
              Ashwood-Smith, P., and C. Bowers, "IS-IS Path Computation
              and Reservation", draft-ietf-isis-pcr-05 (work in
              progress), February 2016.

   [I-D.ietf-spring-segment-routing]
              Filsfils, C., Previdi, S., Decraene, B., Litkowski, S.,
              and R. Shakir, "Segment Routing Architecture", draft-ietf-
              spring-segment-routing-07 (work in progress), December
              2015.

   [I-D.ietf-sunset4-gapanalysis]
              Perreault, S., Tsou, T., Zhou, C., and P. Fan, "Gap
              Analysis for IPv4 Sunset", draft-ietf-
              sunset4-gapanalysis-07 (work in progress), April 2015.

   [I-D.ietf-v6ops-ipv6-ehs-in-real-world]
              Gont, F., Linkova, J., Chown, T., and S. LIU,
              "Observations on the Dropping of Packets with IPv6
              Extension Headers in the Real World", draft-ietf-v6ops-
              ipv6-ehs-in-real-world-02 (work in progress), December
              2015.

   [IEEE8021CB]
              Finn, N., "Draft Standard for Local and metropolitan area
              networks - Seamless Redundancy", IEEE P802.1CB
              /D2.1 P802.1CB, December 2015,
              <http://www.ieee802.org/1/files/private/cb-drafts/
              d2/802-1CB-d2-1.pdf>.

   [IEEE8021Qca]
              IEEE 802.1, "IEEE 802.1Qca Bridges and Bridged Networks -
              Amendment 24: Path Control and Reservation", IEEE
              P802.1Qca/D2.1 P802.1Qca, June 2015,
              <http://www.ieee802.org/1/files/private/ca-drafts/
              d2/802-1Qca-d2-1.pdf>.



Korhonen, et al.        Expires September 5, 2016              [Page 35]

Internet-Draft       DetNet data plane alternatives           March 2016


   [RFC0791]  Postel, J., "Internet Protocol", STD 5, RFC 791,
              DOI 10.17487/RFC0791, September 1981,
              <http://www.rfc-editor.org/info/rfc791>.

   [RFC1122]  Braden, R., Ed., "Requirements for Internet Hosts -
              Communication Layers", STD 3, RFC 1122,
              DOI 10.17487/RFC1122, October 1989,
              <http://www.rfc-editor.org/info/rfc1122>.

   [RFC1393]  Malkin, G., "Traceroute Using an IP Option", RFC 1393,
              DOI 10.17487/RFC1393, January 1993,
              <http://www.rfc-editor.org/info/rfc1393>.

   [RFC1700]  Reynolds, J. and J. Postel, "Assigned Numbers", RFC 1700,
              DOI 10.17487/RFC1700, October 1994,
              <http://www.rfc-editor.org/info/rfc1700>.

   [RFC2460]  Deering, S. and R. Hinden, "Internet Protocol, Version 6
              (IPv6) Specification", RFC 2460, DOI 10.17487/RFC2460,
              December 1998, <http://www.rfc-editor.org/info/rfc2460>.

   [RFC2474]  Nichols, K., Blake, S., Baker, F., and D. Black,
              "Definition of the Differentiated Services Field (DS
              Field) in the IPv4 and IPv6 Headers", RFC 2474,
              DOI 10.17487/RFC2474, December 1998,
              <http://www.rfc-editor.org/info/rfc2474>.

   [RFC2702]  Awduche, D., Malcolm, J., Agogbua, J., O'Dell, M., and J.
              McManus, "Requirements for Traffic Engineering Over MPLS",
              RFC 2702, DOI 10.17487/RFC2702, September 1999,
              <http://www.rfc-editor.org/info/rfc2702>.

   [RFC2784]  Farinacci, D., Li, T., Hanks, S., Meyer, D., and P.
              Traina, "Generic Routing Encapsulation (GRE)", RFC 2784,
              DOI 10.17487/RFC2784, March 2000,
              <http://www.rfc-editor.org/info/rfc2784>.

   [RFC2890]  Dommety, G., "Key and Sequence Number Extensions to GRE",
              RFC 2890, DOI 10.17487/RFC2890, September 2000,
              <http://www.rfc-editor.org/info/rfc2890>.

   [RFC3031]  Rosen, E., Viswanathan, A., and R. Callon, "Multiprotocol
              Label Switching Architecture", RFC 3031,
              DOI 10.17487/RFC3031, January 2001,
              <http://www.rfc-editor.org/info/rfc3031>.






Korhonen, et al.        Expires September 5, 2016              [Page 36]

Internet-Draft       DetNet data plane alternatives           March 2016


   [RFC3032]  Rosen, E., Tappan, D., Fedorkow, G., Rekhter, Y.,
              Farinacci, D., Li, T., and A. Conta, "MPLS Label Stack
              Encoding", RFC 3032, DOI 10.17487/RFC3032, January 2001,
              <http://www.rfc-editor.org/info/rfc3032>.

   [RFC3168]  Ramakrishnan, K., Floyd, S., and D. Black, "The Addition
              of Explicit Congestion Notification (ECN) to IP",
              RFC 3168, DOI 10.17487/RFC3168, September 2001,
              <http://www.rfc-editor.org/info/rfc3168>.

   [RFC3209]  Awduche, D., Berger, L., Gan, D., Li, T., Srinivasan, V.,
              and G. Swallow, "RSVP-TE: Extensions to RSVP for LSP
              Tunnels", RFC 3209, DOI 10.17487/RFC3209, December 2001,
              <http://www.rfc-editor.org/info/rfc3209>.

   [RFC3270]  Le Faucheur, F., Wu, L., Davie, B., Davari, S., Vaananen,
              P., Krishnan, R., Cheval, P., and J. Heinanen, "Multi-
              Protocol Label Switching (MPLS) Support of Differentiated
              Services", RFC 3270, DOI 10.17487/RFC3270, May 2002,
              <http://www.rfc-editor.org/info/rfc3270>.

   [RFC3550]  Schulzrinne, H., Casner, S., Frederick, R., and V.
              Jacobson, "RTP: A Transport Protocol for Real-Time
              Applications", STD 64, RFC 3550, DOI 10.17487/RFC3550,
              July 2003, <http://www.rfc-editor.org/info/rfc3550>.

   [RFC3931]  Lau, J., Ed., Townsley, M., Ed., and I. Goyret, Ed.,
              "Layer Two Tunneling Protocol - Version 3 (L2TPv3)",
              RFC 3931, DOI 10.17487/RFC3931, March 2005,
              <http://www.rfc-editor.org/info/rfc3931>.

   [RFC3985]  Bryant, S., Ed. and P. Pate, Ed., "Pseudo Wire Emulation
              Edge-to-Edge (PWE3) Architecture", RFC 3985,
              DOI 10.17487/RFC3985, March 2005,
              <http://www.rfc-editor.org/info/rfc3985>.

   [RFC4023]  Worster, T., Rekhter, Y., and E. Rosen, Ed.,
              "Encapsulating MPLS in IP or Generic Routing Encapsulation
              (GRE)", RFC 4023, DOI 10.17487/RFC4023, March 2005,
              <http://www.rfc-editor.org/info/rfc4023>.

   [RFC4446]  Martini, L., "IANA Allocations for Pseudowire Edge to Edge
              Emulation (PWE3)", BCP 116, RFC 4446,
              DOI 10.17487/RFC4446, April 2006,
              <http://www.rfc-editor.org/info/rfc4446>.






Korhonen, et al.        Expires September 5, 2016              [Page 37]

Internet-Draft       DetNet data plane alternatives           March 2016


   [RFC4447]  Martini, L., Ed., Rosen, E., El-Aawar, N., Smith, T., and
              G. Heron, "Pseudowire Setup and Maintenance Using the
              Label Distribution Protocol (LDP)", RFC 4447,
              DOI 10.17487/RFC4447, April 2006,
              <http://www.rfc-editor.org/info/rfc4447>.

   [RFC4448]  Martini, L., Ed., Rosen, E., El-Aawar, N., and G. Heron,
              "Encapsulation Methods for Transport of Ethernet over MPLS
              Networks", RFC 4448, DOI 10.17487/RFC4448, April 2006,
              <http://www.rfc-editor.org/info/rfc4448>.

   [RFC4817]  Townsley, M., Pignataro, C., Wainner, S., Seely, T., and
              J. Young, "Encapsulation of MPLS over Layer 2 Tunneling
              Protocol Version 3", RFC 4817, DOI 10.17487/RFC4817, March
              2007, <http://www.rfc-editor.org/info/rfc4817>.

   [RFC5086]  Vainshtein, A., Ed., Sasson, I., Metz, E., Frost, T., and
              P. Pate, "Structure-Aware Time Division Multiplexed (TDM)
              Circuit Emulation Service over Packet Switched Network
              (CESoPSN)", RFC 5086, DOI 10.17487/RFC5086, December 2007,
              <http://www.rfc-editor.org/info/rfc5086>.

   [RFC5087]  Stein, Y(J)., Shashoua, R., Insler, R., and M. Anavi,
              "Time Division Multiplexing over IP (TDMoIP)", RFC 5087,
              DOI 10.17487/RFC5087, December 2007,
              <http://www.rfc-editor.org/info/rfc5087>.

   [RFC5129]  Davie, B., Briscoe, B., and J. Tay, "Explicit Congestion
              Marking in MPLS", RFC 5129, DOI 10.17487/RFC5129, January
              2008, <http://www.rfc-editor.org/info/rfc5129>.

   [RFC5305]  Li, T. and H. Smit, "IS-IS Extensions for Traffic
              Engineering", RFC 5305, DOI 10.17487/RFC5305, October
              2008, <http://www.rfc-editor.org/info/rfc5305>.

   [RFC5440]  Vasseur, JP., Ed. and JL. Le Roux, Ed., "Path Computation
              Element (PCE) Communication Protocol (PCEP)", RFC 5440,
              DOI 10.17487/RFC5440, March 2009,
              <http://www.rfc-editor.org/info/rfc5440>.

   [RFC5462]  Andersson, L. and R. Asati, "Multiprotocol Label Switching
              (MPLS) Label Stack Entry: "EXP" Field Renamed to "Traffic
              Class" Field", RFC 5462, DOI 10.17487/RFC5462, February
              2009, <http://www.rfc-editor.org/info/rfc5462>.







Korhonen, et al.        Expires September 5, 2016              [Page 38]

Internet-Draft       DetNet data plane alternatives           March 2016


   [RFC5921]  Bocci, M., Ed., Bryant, S., Ed., Frost, D., Ed., Levrau,
              L., and L. Berger, "A Framework for MPLS in Transport
              Networks", RFC 5921, DOI 10.17487/RFC5921, July 2010,
              <http://www.rfc-editor.org/info/rfc5921>.

   [RFC6073]  Martini, L., Metz, C., Nadeau, T., Bocci, M., and M.
              Aissaoui, "Segmented Pseudowire", RFC 6073,
              DOI 10.17487/RFC6073, January 2011,
              <http://www.rfc-editor.org/info/rfc6073>.

   [RFC6275]  Perkins, C., Ed., Johnson, D., and J. Arkko, "Mobility
              Support in IPv6", RFC 6275, DOI 10.17487/RFC6275, July
              2011, <http://www.rfc-editor.org/info/rfc6275>.

   [RFC6437]  Amante, S., Carpenter, B., Jiang, S., and J. Rajahalme,
              "IPv6 Flow Label Specification", RFC 6437,
              DOI 10.17487/RFC6437, November 2011,
              <http://www.rfc-editor.org/info/rfc6437>.

   [RFC6540]  George, W., Donley, C., Liljenstolpe, C., and L. Howard,
              "IPv6 Support Required for All IP-Capable Nodes", BCP 177,
              RFC 6540, DOI 10.17487/RFC6540, April 2012,
              <http://www.rfc-editor.org/info/rfc6540>.

   [RFC6564]  Krishnan, S., Woodyatt, J., Kline, E., Hoagland, J., and
              M. Bhatia, "A Uniform Format for IPv6 Extension Headers",
              RFC 6564, DOI 10.17487/RFC6564, April 2012,
              <http://www.rfc-editor.org/info/rfc6564>.

   [RFC6621]  Macker, J., Ed., "Simplified Multicast Forwarding",
              RFC 6621, DOI 10.17487/RFC6621, May 2012,
              <http://www.rfc-editor.org/info/rfc6621>.

   [RFC6658]  Bryant, S., Ed., Martini, L., Swallow, G., and A. Malis,
              "Packet Pseudowire Encapsulation over an MPLS PSN",
              RFC 6658, DOI 10.17487/RFC6658, July 2012,
              <http://www.rfc-editor.org/info/rfc6658>.

   [RFC6718]  Muley, P., Aissaoui, M., and M. Bocci, "Pseudowire
              Redundancy", RFC 6718, DOI 10.17487/RFC6718, August 2012,
              <http://www.rfc-editor.org/info/rfc6718>.

   [RFC6733]  Fajardo, V., Ed., Arkko, J., Loughney, J., and G. Zorn,
              Ed., "Diameter Base Protocol", RFC 6733,
              DOI 10.17487/RFC6733, October 2012,
              <http://www.rfc-editor.org/info/rfc6733>.





Korhonen, et al.        Expires September 5, 2016              [Page 39]

Internet-Draft       DetNet data plane alternatives           March 2016


   [RFC6814]  Pignataro, C. and F. Gont, "Formally Deprecating Some IPv4
              Options", RFC 6814, DOI 10.17487/RFC6814, November 2012,
              <http://www.rfc-editor.org/info/rfc6814>.

   [RFC6864]  Touch, J., "Updated Specification of the IPv4 ID Field",
              RFC 6864, DOI 10.17487/RFC6864, February 2013,
              <http://www.rfc-editor.org/info/rfc6864>.

   [RFC7045]  Carpenter, B. and S. Jiang, "Transmission and Processing
              of IPv6 Extension Headers", RFC 7045,
              DOI 10.17487/RFC7045, December 2013,
              <http://www.rfc-editor.org/info/rfc7045>.

   [RFC7167]  Frost, D., Bryant, S., Bocci, M., and L. Berger, "A
              Framework for Point-to-Multipoint MPLS in Transport
              Networks", RFC 7167, DOI 10.17487/RFC7167, April 2014,
              <http://www.rfc-editor.org/info/rfc7167>.

   [RFC7348]  Mahalingam, M., Dutt, D., Duda, K., Agarwal, P., Kreeger,
              L., Sridhar, T., Bursell, M., and C. Wright, "Virtual
              eXtensible Local Area Network (VXLAN): A Framework for
              Overlaying Virtualized Layer 2 Networks over Layer 3
              Networks", RFC 7348, DOI 10.17487/RFC7348, August 2014,
              <http://www.rfc-editor.org/info/rfc7348>.

   [RFC7399]  Farrel, A. and D. King, "Unanswered Questions in the Path
              Computation Element Architecture", RFC 7399,
              DOI 10.17487/RFC7399, October 2014,
              <http://www.rfc-editor.org/info/rfc7399>.

   [RFC7426]  Haleplidis, E., Ed., Pentikousis, K., Ed., Denazis, S.,
              Hadi Salim, J., Meyer, D., and O. Koufopavlou, "Software-
              Defined Networking (SDN): Layers and Architecture
              Terminology", RFC 7426, DOI 10.17487/RFC7426, January
              2015, <http://www.rfc-editor.org/info/rfc7426>.

   [RFC7510]  Xu, X., Sheth, N., Yong, L., Callon, R., and D. Black,
              "Encapsulating MPLS in UDP", RFC 7510,
              DOI 10.17487/RFC7510, April 2015,
              <http://www.rfc-editor.org/info/rfc7510>.

   [RFC7637]  Garg, P., Ed. and Y. Wang, Ed., "NVGRE: Network
              Virtualization Using Generic Routing Encapsulation",
              RFC 7637, DOI 10.17487/RFC7637, September 2015,
              <http://www.rfc-editor.org/info/rfc7637>.

   [sixlab]   Cisco, "6lab - The place to monitor IPv6 adoption",
              <http://6lab.cisco.com/stats/>.



Korhonen, et al.        Expires September 5, 2016              [Page 40]

Internet-Draft       DetNet data plane alternatives           March 2016


   [ST20227]  SMPTE 2022, "Seamless Protection Switching of SMPTE ST
              2022 IP Datagrams", ST 2022-7:2013, 2013,
              <https://www.smpte.org/digital-library>.

   [TSNTG]    IEEE Standards Association, "IEEE 802.1 Time-Sensitive
              Networks Task Group", 2013,
              <http://www.IEEE802.org/1/pages/avbridges.html>.

Authors' Addresses

   Jouni Korhonen (editor)
   Broadcom
   3151 Zanker Road
   San Jose, CA  95134
   USA

   Email: jouni.nospam@gmail.com


   Janos Farkas
   Ericsson
   Konyves Kalman krt. 11/B
   Budapest  1097
   Hungary

   Email: janos.farkas@ericsson.com


   Gregory Mirsky
   Ericsson

   Email: gregory.mirsky@ericsson.com


   Pascal Thubert
   Cisco

   Email: pthubert@cisco.com


   Zhuangyan Zhuang
   Huawei

   Email: zhuangyan.zhuang@huawei.com







Korhonen, et al.        Expires September 5, 2016              [Page 41]
